@page "/"
@inject IConfiguration config
@rendermode InteractiveServer

<PageTitle>Upload Demo App</PageTitle>

<h1>Upload Demo</h1>

<InputFile OnChange="LoadFiles" multiple />

@if(errors.Count>0){
    <h2>Errors:</h2>
    <ul class="text-danger">
        @foreach (var error in errors)
        {
            <li>@error</li>
        }
    </ul>
}

@code{
    private long maxFileSize = 1024 * 1024 * 3; // change last number to change megabytes allowed

    private int maxFileAllowed = 3;

    private List<string> errors = new();

    private async Task LoadFiles(InputFileChangeEventArgs e) {
        errors.Clear();
        if (e.FileCount > maxFileAllowed) {
            errors.Add($"error attempting too many files");
            return;
        }
        foreach (var file in e.GetMultipleFiles(maxFileAllowed))
        {
            try
            {
                string newFileName =
               Path.ChangeExtension(
                   Path.GetRandomFileName(),
                   Path.GetExtension(file.Name)
               );
                string path = Path.Combine(config.GetValue<string>("FileStorage"), "kami", newFileName);
                Directory.CreateDirectory(Path.Combine(config.GetValue<string>("FileStorage"), "kami"));
                await using FileStream fs = new(path, FileMode.Create);
                await file.OpenReadStream(maxFileSize).CopyToAsync(fs);
            }
            catch (Exception ex)
            {
                errors.Add($"File: {file.Name} Error:{ex.Message}");

            }
        }
    }
    }